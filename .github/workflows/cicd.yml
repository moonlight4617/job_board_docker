name: CI/CD for Laravel and AWS Fargate

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Docker Version
        run: docker version

      - name: Build Docker Images
        run: docker-compose build

      - name: Create & Start Docker Containers
        run: docker-compose up -d

      - name: OS Version
        run: |
          docker-compose exec -T app cat /etc/os-release
          docker-compose exec -T app cat /etc/debian_version

      - name: PHP Version
        run: docker-compose exec -T app php --version

      - name: Composer Version
        run: docker-compose exec -T app composer --version

      - name: Install Dependencies
        run: docker-compose exec -T app composer install

      - name: Laravel Version
        run: docker-compose exec -T app php artisan --version

      - name: Laravel Setting
        run: |
          docker-compose exec -T app cp .env.example .env
          docker-compose exec -T app php artisan key:generate

      - name: Laravel Migrate Testing
        run: docker-compose exec -T app php artisan migrate

      - name: Laravel Rollback Testing
        run: docker-compose exec -T app php artisan migrate:refresh

      - name: Laravel Seeding Testing
        run: docker-compose exec -T app php artisan db:seed

      - name: Laravel PHPUnit Testing
        run: docker-compose exec -T app php artisan test

  # deploy:
  #   if: github.ref == 'refs/heads/main'
  #   needs: ci
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Log in to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1

  #     - name: Build, tag, and push Docker image
  #       env:
  #         ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  #         ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  #         IMAGE_TAG: ${{ github.sha }}
  #       run: |
  #         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  #     - name: Deploy to Fargate
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_REGION: ${{ secrets.AWS_REGION }}
  #         ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  #         ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  #         IMAGE_TAG: ${{ github.sha }}
  #       run: |
  #         aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment \
  #         --region $AWS_REGION
